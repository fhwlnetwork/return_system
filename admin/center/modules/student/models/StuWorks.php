<?php

namespace center\modules\student\models;

use center\models\Pagination;
use center\modules\product\models\Major;
use Yii;

/**
 * This is the model class for table "stu_works".
 *
 * @property string $id
 * @property string $stu_id
 * @property string $stu_name
 * @property string $company_name
 * @property double $salary
 * @property string $major_id
 * @property string $major_name
 * @property string $stime
 * @property string $stop_time
 * @property integer $is_end
 * @property string $ctime
 * @property string $utime
 */
class StuWorks extends \yii\db\ActiveRecord
{
    public $is_same = 1;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'stu_works';
    }

    public function beforeSave($insert)
    {
        if ($insert) {
            $this->stu_name = $this->stu_id ? $this->stu_name : Yii::$app->user->identity->username;
            $this->stu_id = $this->stu_id ? $this->stu_id : Yii::$app->user->identity->getId();
            $isOrigin = Yii::$app->user->identity->major_id;
            $this->is_same = intval($isOrigin == $this->major_id);
            $this->stime = strtotime($this->stime);
            $this->stop_time = $this->stop_time ? strtotime($this->stop_time) : 0;
            $this->is_end = $this->stop_time ? 0 : 1;
            $this->ctime = $this->utime = time();
            $major = Major::find()->where(['id' => $this->major_id])->one();
            $this->major_name = $major->major_name;
        } else {
            $isOrigin = Yii::$app->user->identity->major_id;
            $this->is_same = intval($isOrigin == $this->major_id);
            $this->stime = strtotime($this->stime);
            $this->utime = time();
            $this->stop_time = $this->stop_time ? strtotime($this->stop_time) : 0;
            $this->is_end = $this->stop_time ? 0 : 1;
            $major = Major::find()->where(['id' => $this->major_id])->one();
            $this->major_name = $major->major_name;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['stu_id', 'major_id', 'stime', 'stop_time', 'is_end', 'ctime', 'utime'], 'string'],
            [['salary'], 'number'],
            [['stu_name', 'company_name', 'major_name', 'work_name'], 'string', 'max' => 64],
            [['Dwzzjgdm', 'Dwxzdm', 'Dwhydm', 'Dwszddm', 'Gzzwlbdm', 'Byqxdm'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'stu_name' => '用户名',
            'company_name' => '公司名称',
            'salary' => '薪水',
            'major_id' => '专业名称',
            'major_name' => '专业名称',
            'stime' => '开始时间',
            'stop_time' => '结束时间',
            'is_end' => '是否至今',
            'ctime' => 'Ctime',
            'utime' => 'Utime',
            'Byqxdm' => '毕业去向代码',
            'work_name' => '工作名称',
            'Dwzzjgdm' => '单位组织机构代码',
            'Dwxzdm' => '单位性质代码',
            'Dwhydm' => '单位行业代码',
            'Dwszddm' => '单位所在地代码',
            'Gzzwlbdm' => '工作职位类别代码',
            
        ];
    }


    /**
     * 保存到工作表中
     * @param bool $insert
     * @param array $changedAttributes
     */
    public function afterSave($insert, $changedAttributes)
    {
        $attr = $this->oldAttributes;
        unset($attr['id']);
        $attr['is_same'] = $this->is_same;
        $attr['group_id'] = Yii::$app->user->identity->mgr_org;
        $isExists = StuWorksNow::findOne(['stu_id' => $this->stu_id]);
        if ($isExists) {
            Yii::$app->db->createCommand()->update(StuWorksNow::tableName(), $attr, ['stu_id' => $this->stu_id])->execute();
        } else {
            $model = new StuWorksNow();
            Yii::$app->db->createCommand()->insert(StuWorksNow::tableName(), $attr)->execute();
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
    public function getSearchInput()
    {
        //扩展字段加入搜索
        $exField = [];

        return yii\helpers\ArrayHelper::merge([
            'company_name' => [
                'label' => Yii::t('app', '公司名称')
            ],
            'ctime' => [
                'label' => Yii::t('app', '发布时间')
            ],
        ], $exField);
    }

    public function getList($param)
    {
        $rs = [];
        try {
            $query = self::find();
            $pagesSize = 10;

            foreach ($param as $k => $v) {
                if (!empty($v) && $this->hasAttribute($k)) {
                    if ($k == 'company_name') {
                        $query->andWhere("$k like :title", [':title' => "%" . $v . "%"]);
                    } else {
                        $query->andWhere('ctime >= :start', [':start' => strtotime($v)]);
                    }
                }
            }
            $query->andWhere(['stu_id' => Yii::$app->user->identity->getId()]);
            $pages = new Pagination([
                'totalCount' => $query->count(),
                'pageSize' => $pagesSize
            ]);
            $list = $query->offset($pages->offset)
                ->limit($pages->limit)
                ->asArray()
                ->all();
            $rs = ['code' => 1, 'data' => $list, 'pagination' => $pages];
        } catch (\Exception $e) {
            $rs = ['code' => 500, 'msg' => '获取招聘信息异常'];
        }

        return $rs;
    }
}
