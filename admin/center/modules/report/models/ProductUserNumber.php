<?php

namespace center\modules\report\models;

use Yii;

/**
 * This is the model class for table "product_user_number".
 *
 * @property integer $id
 * @property integer $date
 * @property integer $product_id
 * @property string $product_name
 * @property integer $total_number
 * @property integer $active_number
 */
class ProductUserNumber extends \yii\db\ActiveRecord
{
    public $start_At; //开始时间
    public $stop_At; //截止时间
    public $showField; //相关的产品信息

    public function getShowField(){
        return $this->showField;
    }

    public function setShowField($showField){
        $this->showField = $showField;
    }

    public function getStopAt(){
        return $this->stop_At;
    }

    public function setStopAt($stop_At){
        $this->stop_At = $stop_At;
    }

    public function getStartAt(){
        return $this->start_At;
    }

    public function setStartAt($start_At){
        $this->start_At = $start_At;
    }


    //验证输入时间的合理性以及时间不长的合理性
    public function validateField()
    {
        $start_At = strtotime($this->start_At); //开始时间
        $stop_At = strtotime($this->stop_At); //结束时间

        if ($stop_At === $start_At || $stop_At < $start_At) {
            $this->addError($this->stop_At, Yii::t('app', 'end time error'));
        }

        return true;
    }


    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'product_user_number';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['date', 'product_id', 'product_name', 'total_number', 'active_number'], 'required'],
            [['date', 'product_id', 'total_number', 'active_number'], 'integer'],
            [['product_name'], 'string', 'max' => 64],
            [['start_At','stop_At','showField','countType'],'safe','on'=>'product-user']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'date' => 'Date',
            'product_id' => 'Product ID',
            'product_name' => 'Product Name',
            'total_number' => 'Total Number',
            'active_number' => 'Active Number',
        ];
    }

    /**
     * 设置场景
     *
     * */
    public function scenarios()
    {
        $scenarios =  parent::scenarios(); // TODO: Change the autogenerated stub
        $scenarios['product-user'] = ['start_At','stop_At','showField'];
        return $scenarios;
    }


    /**
     * 获取统计人数的类型
     *
     * */
    public function getAllCountType(){
        return [
            'total_number' => \Yii::t('app','total_number'),
            'active_number' => \Yii::t('app','active_number')
        ];
    }

    /**
     * 获取对应excel的数据
     * 
     * */
    public function getExcelUserNumber(){
        $startAt = strtotime($this->start_At);
        $stopAt = strtotime($this->stop_At);
        $showField = $this->showField;
        $query = new \yii\db\Query();
        $result = $query->select(['product_name','date','total_number','active_number'])
            ->from(self::tableName())
            ->where(['>=','date',$startAt])
            ->andWhere(['<','date',$stopAt])
            ->andWhere(['in','product_id',$showField])
            ->orderBy(['date'=>SORT_ASC,'product_id'=>SORT_ASC])
            ->all();
        //处理日期
        foreach ($result as $key => $value){
            $value['date'] = date('Y-m-d',$value['date']);
            $result[$key] = $value;
        }
        return $result;
    }

    /**
     * 获取产品对应的人数信息
     *
     * */
    public function getProductUserNumber(){
        $startAt = strtotime($this->start_At);
        $stopAt = strtotime($this->stop_At);
        $showField = $this->showField;
        $query = new \yii\db\Query();
        $result = $query->select(['date','product_id','product_name','total_number','active_number'])
            ->from(self::tableName())
            ->where(['>=','date',$startAt])
            ->andWhere(['<=','date',$stopAt])
            ->andWhere(['in','product_id',$showField])
            ->orderBy(['date'=>SORT_ASC,'product_id'=>SORT_ASC])
            ->all();
        $temp = [];
        $chartTemp = [];
        $date = [];
        if($result){
            //数组数据处理
            foreach ($result as $key => $value){
                //重新梳理表格的数据
                $temp[$value['product_name']][date('Y-m-d',$value['date'])]['product_name'] = $value['product_name'];
                $temp[$value['product_name']][date('Y-m-d',$value['date'])]['product_id'] = $value['product_id'];
                $temp[$value['product_name']][date('Y-m-d',$value['date'])]['total_number'] = $value['total_number'];
                $temp[$value['product_name']][date('Y-m-d',$value['date'])]['active_number'] = $value['active_number'];
                //重新梳理图标的数据
                $chartTemp[$value['product_name']]['total_number'][] = $value['total_number'];
                $chartTemp[$value['product_name']]['active_number'][] = $value['active_number'];
                $date[] = date('Y-m-d',$value['date']);
            }
        }
        $date = array_unique($date);
        foreach ($date as $key => $value){
            $dateArr[] = $value;
        }
        //序列化的数据字符串
        $str = '';
        //曲线名称数组
        $legend = [];
        foreach ($chartTemp as $key => $value){
            //组装产品实际人数
            $activeData = json_encode($value['active_number']);
            $activeName = $key.\Yii::t('app','active number');
            //给出series数据
            $str = $str."{
							name:'{$activeName}',
							type:'bar',					
							data:$activeData,
							markPoint : {
								data : [
									{type : 'max', name: '".\Yii::t('app', 'max')."'}
								]
							},
                        itemStyle: {
                            normal: {label : {show: true, position: 'top'}}}							
						},						
						";
            //组装产品人数总数
            $totalData = json_encode($value['total_number']);
            $totalName = $key.\Yii::t('app','total number');
            $str = $str."{
							name:'{$totalName}',
							type:'bar',					
							data:$totalData,
							markPoint : {
								data : [
									{type : 'max', name: '".\Yii::t('app', 'max')."'}
								]
							},
                        itemStyle: {
                            normal: {label : {show: true, position: 'top'}}}							
						},						
						";
            $legend[] = $activeName;
            $legend[] = $totalName;
        }
        //统计图数据
        $data['chart']['data'] = $str;
        $data['chart']['xAxis'] = $dateArr;
        $data['chart']['legend'] = $legend;
        $data['table']['data'] = $temp;
        return $data;

    }
}
