<?php

namespace center\modules\message\models;

use center\models\Pagination;
use center\modules\product\models\Major;
use center\modules\product\models\MajorWorkRelation;
use Yii;

/**
 * This is the model class for table "work_information".
 *
 * @property string $id
 * @property string $company_name
 * @property string $major_id
 * @property string $work_id
 * @property string $work_name
 * @property string $major_name
 * @property string $salary
 * @property string $desc
 * @property string $position
 * @property string $require
 * @property string $ctime
 * @property string $utime
 */
class WorkInformation extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'work_information';
    }

    public function beforeSave($insert)
    {
        $major = Major::find()->where(['id' => $this->major_id])->one();
        $this->major_name = $major->major_name;
        $work = MajorWorkRelation::find()->where(['id' => $this->work_id])->one();
        $this->work_name = $work->work_name;
        $this->mid = Yii::$app->user->identity->getId();
        if ($insert) {
            $this->ctime = $this->utime = time();
        } else {
            $this->utime = time();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['major_id', 'salary', 'desc', 'company_name', 'require', 'work_id'], 'required'],
            [['major_id', 'work_id', 'ctime', 'utime'], 'integer'],
            [['position', 'require'], 'string'],
            [['company_name', 'work_name', 'major_name'], 'string', 'max' => 64],
            [['salary'], 'string', 'max' => 32],
            [['desc'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'company_name' => '公司名称',
            'major_id' => '专业名称',
            'work_id' => '工作名称',
            'work_name' => '工作名称',
            'major_name' => '专业名称',
            'salary' => '薪资范围',
            'desc' => '工作描述',
            'position' => '职责',
            'require' => '工作要求',
            'ctime' => 'Ctime',
            'utime' => 'Utime',
        ];
    }
    public function getAttributesList()
    {
        $majores = Major::find()->indexBy('id')->asArray()->all();
        $m_list = ['' => '请选择'];
        foreach ($majores as $id => $majore) {
            $m_list[$id] = $majore['major_name'];
        }
        return yii\helpers\ArrayHelper::merge([], [
            //用户状态
            'major' => $m_list
            //用户状态
        ]);
    }
    /**
     * 要搜索的字段
     * @return array
     */
    public function getSearchInput()
    {
        //扩展字段加入搜索
        $exField = [];

        return yii\helpers\ArrayHelper::merge([
            'company_name' => [
                'label' => Yii::t('app', '公司名称')
            ],
            'ctime' => [
                'label' => Yii::t('app', '发布时间')
            ],
        ], $exField);
    }

    /**
     * 获取所有招聘信息
     * @param $param
     * @return array
     */
    public function getList($param)
    {
        $rs = [];
        try {
            $query = self::find();
            $pagesSize = 10;

            foreach ($param as $k => $v) {
                if (!empty($v) && $this->hasAttribute($k)) {
                    if ($k == 'company_name') {
                        $query->andWhere("$k like :title", [':title' => "%".$v."%"]);
                    } else {
                        $query->andWhere('ctime >= :start', [':start' => strtotime($v)]);
                    }
                }
            }
            $pages = new Pagination([
                'totalCount' => $query->count(),
                'pageSize' => $pagesSize
            ]);
            $list = $query->offset($pages->offset)
                ->limit($pages->limit)
                ->asArray()
                ->all();
            $rs = ['code' => 1, 'data' => $list, 'pagination' => $pages];
        } catch (\Exception $e) {
            $rs = ['code' => 500, 'msg' => '获取招聘信息异常'];
        }

        return $rs;
    }
}
